import numpy
from keras.datasets import cifar10
from keras.utils import np_utils
from keras import backend as K
from keras.models import load_model
import matplotlib.pyplot as plt
import numpy as np
from numpy.random import seed
seed(7)
import tensorflow as tf
tf.random.set_seed(7)
K.set_image_data_format('channels_last')


(X_train, y_train), (X_test, y_test) = cifar10.load_data()  # Loading data

# normalizing the inputs from 0-255 to 0.0-1.0
X_train = X_train.astype('float32')
X_test = X_test.astype('float32')
X_train = X_train / 255.0
X_test = X_test / 255.0


y_train = np_utils.to_categorical(y_train)
y_test = np_utils.to_categorical(y_test)


model = load_model('cifar10_model.h5')  # Loading the model.

# evaluating the model.
epochs = 5
scores = model.evaluate(X_test, y_test, verbose=0)
model.save('cifar10_model.h5')
print("Accuracy: %.2f%%" % (scores[1] * 100))

# Printing the categories for the different labels.
print("Categories: 0: airplane, 1: automobile, 2: bird, 3: cat, 4: deer, 5: dog, 6: frog, 7: horse, 8: ship, 9: truck")


result = np.argmax(model.predict(X_test), axis=-1)  # Array for categories.

images = list(zip(X_test, y_test))

# Plotting images and their respective labels.
for index, (image, label) in enumerate(images[:6]):
    plt.subplot(2, 3, index + 1)
    plt.imshow(image, interpolation='nearest')
    plt.title("Label " + '%i' % result[index])
plt.show()
